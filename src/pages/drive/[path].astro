---
import { GetDriver, type DriveItems } from "../../../Engin";
import { VideoView } from "../../component/drive/video";
import Public from "../../layout/public.astro";

const url = new URLSearchParams(Astro.params.url);
const { path } = Astro.params;
const driver = await GetDriver(path);
const id = Astro.url.searchParams.get("id");
let items: DriveItems[];
let Origin = Astro.url.origin;
if (id) {
  items = await driver.List(id);
} else {
  items = await driver.List();
}
---

<Public title="list ">
  <div class="w-full max-w-7xl mx-auto flex flex-row gap-2 p-4 flex-wrap">
    {console.log(items)}
    {
      items.map((item: DriveItems, index) => (
        <>
          {item.type === "folder" ? (
            <a
              href={`/drive/${path}?id=${item.id}`}
              class=" grid-cols-3 gap-4 p-3 font-semibold rounded-md shadow-md col-span-1 flex items-center  truncate border-white border-2"
            >
              <i class="fa-solid fa-folder text-2xl text-blue-500" />
              <span class="text-gray-400 text-md max-w-22 truncate">
                {item.name}
              </span>
              <span class="text-gray-400 text-md">
                {(item.size / 1024 / 1024).toFixed(2)} mb
              </span>
            </a>
          ) : item.type.includes("video") ? (
            <VideoView path={path} item={item} client:only="react" />
          ) : (
            <a
              href={`/api/download?path=${path}&id=${item.id}`}
              class="col-span-1 flex items-center gap-2 truncate"
            >
              <i class="fa-solid fa-file text-2xl text-blue-500" />
              <span class="text-gray-400 text-md">{item.name}</span>``
            </a>
          )}
        </>
      ))
    }
  </div>
</Public>

<style>
  @media (min-width: 640px) {
    .intent {
      display: none;
    }
  }
  @media (max-width: 640px) {
    .potplayer {
      display: none;
    }
  }
</style>
